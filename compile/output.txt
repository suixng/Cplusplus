Your words:

-------------------------------
begin
/* the main function */
int main(){
    
    char a[6]={'b'};
    int b[10];
    char c[6];
    for(int i=0;i<6;i++){
        if((a[i])>=97){
            b[i]=a[i];
            c[i]=b[i];
        }
        printf("%d",b[i]);
        printf("%c",c[i]);
    }

    system("pause");
    return 0 ;
}
end
-------------------------------

The result of lexical analyzer:

(1,begin)
(20,\n)
(68,/*)
(69,*/)
(20,\n)
(3,int)
(5,main)
(56,()
(57,))
(60,{)
(20,\n)
(20,\n)
(4,char)
(13,'a')
(58,[)
(14,110)
(59,])
(42,=)
(60,{)
(65,')
(13,'b')
(65,')
(61,})
(64,;)
(20,\n)
(3,int)
(13,'b')
(58,[)
(14,1010)
(59,])
(64,;)
(20,\n)
(4,char)
(13,'c')
(58,[)
(14,110)
(59,])
(64,;)
(20,\n)
(10,for)
(56,()
(3,int)
(13,'i')
(42,=)
(14,0)
(64,;)
(13,'i')
(31,<)
(14,110)
(64,;)
(13,'i')
(26,++)
(57,))
(60,{)
(20,\n)
(6,if)
(56,()
(56,()
(13,'a')
(58,[)
(13,'i')
(59,])
(57,))
(32,>=)
(14,1100001)
(57,))
(60,{)
(20,\n)
(13,'b')
(58,[)
(13,'i')
(59,])
(42,=)
(13,'a')
(58,[)
(13,'i')
(59,])
(64,;)
(20,\n)
(13,'c')
(58,[)
(13,'i')
(59,])
(42,=)
(13,'b')
(58,[)
(13,'i')
(59,])
(64,;)
(20,\n)
(61,})
(20,\n)
(8,printf)
(56,()
(66,")
(25,%)
(13,'d')
(66,")
(63,,)
(13,'b')
(58,[)
(13,'i')
(59,])
(57,))
(64,;)
(20,\n)
(8,printf)
(56,()
(66,")
(25,%)
(13,'c')
(66,")
(63,,)
(13,'c')
(58,[)
(13,'i')
(59,])
(57,))
(64,;)
(20,\n)
(61,})
(20,\n)
(20,\n)
(13,'system')
(56,()
(66,")
(13,'pause')
(66,")
(57,))
(64,;)
(20,\n)
(11,return)
(14,0)
(64,;)
(20,\n)
(61,})
(20,\n)
(12,end)
